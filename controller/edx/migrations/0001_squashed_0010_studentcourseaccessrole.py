# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-18 02:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [(b'edx', '0001_initial'), (b'edx', '0002_authuserprofile'), (b'edx', '0003_auto_20171025_0331'), (b'edx', '0004_auto_20171025_0336'), (b'edx', '0005_certificatesgeneratedcertificate_coursewarestudentmodule_gradespersistentcoursegrade_gradespersisten'), (b'edx', '0006_auto_20171027_0205'), (b'edx', '0007_auto_20171027_0229'), (b'edx', '0008_auto_20171027_0249'), (b'edx', '0009_auto_20171029_0008'), (b'edx', '0010_studentcourseaccessrole')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=30L, unique=True)),
                ('first_name', models.CharField(max_length=30L)),
                ('last_name', models.CharField(max_length=30L)),
                ('email', models.CharField(max_length=75L, unique=True)),
                ('password', models.CharField(max_length=128L)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('is_superuser', models.IntegerField()),
                ('last_login', models.DateTimeField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='AuthUserprofile',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255L)),
                ('meta', models.TextField()),
                ('gender', models.CharField(db_index=True, max_length=6L, null=True)),
                ('year_of_birth', models.IntegerField(db_index=True, null=True)),
                ('level_of_education', models.CharField(db_index=True, max_length=6L, null=True)),
                ('goals', models.TextField(null=True)),
                ('allow_certificate', models.SmallIntegerField()),
                ('country', models.CharField(max_length=2L)),
                ('city', models.TextField()),
                ('bio', models.CharField(max_length=3000L, null=True)),
                ('profile_image_uploaded_at', models.DateTimeField(null=True)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='edx.AuthUser')),
            ],
            options={
                'db_table': 'auth_userprofile',
            },
        ),
        migrations.CreateModel(
            name='StudentCourseenrollment',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('created', models.DateTimeField(db_index=True, null=True)),
                ('is_active', models.SmallIntegerField()),
                ('mode', models.CharField(max_length=100)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='edx.AuthUser')),
            ],
            options={
                'db_table': 'student_courseenrollment',
            },
        ),
        migrations.CreateModel(
            name='UserIdMap',
            fields=[
                ('hash_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='edx.AuthUser')),
                ('username', models.ForeignKey(db_column='username', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='edx.AuthUser', to_field='username')),
            ],
            options={
                'db_table': 'user_id_map',
            },
        ),
        migrations.CreateModel(
            name='CertificatesGeneratedcertificate',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('download_url', models.CharField(max_length=128)),
                ('grade', models.FloatField()),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('key', models.CharField(max_length=32)),
                ('status', models.CharField(max_length=32)),
                ('verify_uuid', models.CharField(max_length=32)),
                ('download_uuid', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=255)),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('error_reason', models.CharField(max_length=512)),
                ('mode', models.CharField(max_length=32)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='edx.AuthUser')),
            ],
            options={
                'db_table': 'certificates_generatedcertificate',
            },
        ),
        migrations.CreateModel(
            name='CoursewareStudentmodule',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('module_type', models.CharField(db_index=True, default='problem', max_length=32)),
                ('module_id', models.CharField(db_index=True, max_length=255)),
                ('state', models.TextField(null=True)),
                ('grade', models.FloatField(db_index=True, null=True)),
                ('created', models.DateTimeField(db_index=True)),
                ('modified', models.DateTimeField(db_index=True, null=True)),
                ('max_grade', models.FloatField(null=True)),
                ('done', models.CharField(max_length=8)),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('student_id', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='edx.AuthUser')),
            ],
            options={
                'db_table': 'courseware_studentmodule',
            },
        ),
        migrations.CreateModel(
            name='GradesPersistentcoursegrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('grading_policy_hash', models.CharField(max_length=255)),
                ('percent_grade', models.FloatField(db_index=True)),
                ('letter_grade', models.CharField(max_length=255)),
                ('passed_timestamp', models.DateTimeField(db_index=True, null=True)),
                ('created', models.DateTimeField(db_index=True)),
                ('modified', models.DateTimeField(db_index=True)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='edx.AuthUser')),
            ],
            options={
                'db_table': 'grades_persistentcoursegrade',
            },
        ),
        migrations.CreateModel(
            name='GradesPersistentsubsectiongrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('usage_key', models.CharField(db_index=True, max_length=255)),
                ('earned_all', models.FloatField(db_index=True)),
                ('possible_all', models.FloatField(db_index=True)),
                ('earned_graded', models.FloatField(db_index=True)),
                ('possible_graded', models.FloatField(db_index=True)),
                ('first_attempted', models.DateTimeField(db_index=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField(db_index=True)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='edx.AuthUser')),
            ],
            options={
                'db_table': 'grades_persistentsubsectiongrade',
            },
        ),
        migrations.CreateModel(
            name='StudentAnonymoususerid',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('anonymous_user_id', models.CharField(max_length=32, unique=True)),
                ('course_id', models.CharField(db_index=True, max_length=255)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='edx.AuthUser')),
            ],
            options={
                'db_table': 'student_anonymoususerid',
            },
        ),
        migrations.CreateModel(
            name='StudentLanguageproficiency',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('code', models.CharField(db_index=True, max_length=16)),
                ('user_profile_id', models.ForeignKey(db_column='user_profile_id', on_delete=django.db.models.deletion.CASCADE, to='edx.AuthUserprofile')),
            ],
            options={
                'db_table': 'student_languageproficiency',
            },
        ),
        migrations.CreateModel(
            name='StudentCourseaccessrole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(db_column='course_id', db_index=True, max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='edx.AuthUser')),
            ],
            options={
                'db_table': 'student_courseaccessrole',
            },
        ),
    ]
